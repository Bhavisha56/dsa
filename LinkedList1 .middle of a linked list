Middle of a Linked List
Difficulty: EasyAccuracy: 57.93%Submissions: 350K+Points: 2
Given the head of a linked list, the task is to find the middle. For example, the middle of 1-> 2->3->4->5 is 3. If there are two middle nodes (even count), return the second middle. For example, middle of 1->2->3->4->5->6 is 4.

Examples:

Input: Linked list: 1->2->3->4->5
Output: 3

Explanation: The given linked list is 1->2->3->4->5 and its middle is 3.
*/

class Solution { O(n) sc O(1)
    int getMiddle(Node head) {
        // Your code here.
        
        Node slow=head;
        Node fast=head;
        while(fast.next!=null && fast.next.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        if(fast.next==null)return slow.data;
        return slow.next.data;
    }
}
