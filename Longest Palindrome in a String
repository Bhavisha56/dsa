
Difficulty: MediumAccuracy: 23.2%Submissions: 303K+Points: 4
Given a string str, find the longest palindromic substring in str. Substring of string str: str[ i . . . . j ] where 0 ≤ i ≤ j < len(str). Return the longest palindromic substring of str.

Palindrome string: A string that reads the same backward. More formally, str is a palindrome if reverse(str) = str. In case of conflict, return the substring which occurs first ( with the least starting index).

Examples :

Input: str = "aaaabbaa"
Output: aabbaa
Explanation: The longest Palindromic substring is "aabbaa".

class Solution{  tc O(n^3) sc O(1)
    static String reverse(String s){
        String n="";
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            n=ch+n;
        }
        return n;
    }
    static String longestPalin(String S){
        // code here
        // int maxlen=Integer.MIN_VALUE;
        String ans="";
        for(int i=0;i<S.length();i++){
            for(int j=i+1;j<=S.length();j++){
                String temp = S.substring(i,j);
                String rev = reverse(temp);
                if(rev.equals(temp) && temp.length() > ans.length()){
                    ans=temp;
                }
            }
        }
        return ans;
    }
}
