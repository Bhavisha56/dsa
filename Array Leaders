tc O(n^2) sc O(1)
class Solution {
    // Function to find the leaders in the array.
    static ArrayList<Integer> leaders(int n, int arr[]) {
        // Your code here
        ArrayList<Integer> li=new ArrayList<>();
        for(int i=0;i<n;i++){
            boolean flag=true;
            for(int j=i+1;j<n;j++){
                if(arr[j]>arr[i]){
                    flag=false;
                    break;
                }
            }
            if(flag){
                li.add(arr[i]);
            }
        }
        return li;
        
    }
}
tc O(n) sc O(1)
     // Your code here
       ArrayList<Integer> li=new ArrayList<>();
       li.add(arr[n-1]);
       for(int i=n-2;i>=0;i--){
           if(arr[i]>=li.get(li.size()-1)){
               li.add(arr[i]);
           }
       }
       Collections.reverse(li);
       return li;
       
